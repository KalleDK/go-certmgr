name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v .
    
    - name: Package Linux
      env:
        GOOS: linux
        GOARCH: amd64
      run: |
        mkdir ${GOOS}_${GOARCH}
        go build -v -o ${GOOS}_${GOARCH}/certmgr .
        tar -czvf certmgr-latest_${GOOS}_${GOARCH}.tar.gz -C ./${GOOS}_${GOARCH} certmgr
        
    - uses: actions/upload-artifact@v2
      with:
        name: certmgr-latest_linux_amd64.tar.gz
        path: certmgr-latest_linux_amd64.tar.gz
    
    - name: Package FreeBSD
      env:
        GOOS: freebsd
        GOARCH: amd64
      run: |
        mkdir ${GOOS}_${GOARCH}
        go build -v -o ${GOOS}_${GOARCH}/certmgr .
        tar -czvf certmgr-latest_${GOOS}_${GOARCH}.tar.gz -C ./${GOOS}_${GOARCH} certmgr
        find . | grep tar
    
    - uses: actions/upload-artifact@v2
      with:
        name: certmgr-latest_freebsd_amd64.tar.gz
        path: certmgr-latest_freebsd_amd64.tar.gz
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./certmgr-latest_linux_amd64.tar.gz
        asset_name: certmgr-latest_linux_amd64.tar.gz
        asset_content_type: application/octet-stream
    - name: Upload Release Asset
      id: upload-release-asset-freebsd 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./certmgr-latest_freebsd_amd64.tar.gz
        asset_name: certmgr-latest_freebsd_amd64.tar.gz
        asset_content_type: application/octet-stream
